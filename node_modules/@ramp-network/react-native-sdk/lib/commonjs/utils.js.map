{"version":3,"sources":["utils.ts"],"names":["initEventListenersDict","widgetEventTypes","Array","from","Object","values","WidgetEventTypes","reduce","listenersDict","eventType","getRandomIntString","String","Math","floor","random"],"mappings":";;;;;;;;AAAA;;AAEO,SAASA,sBAAT,GAAsD;AAC3D,QAAMC,gBAAgB,GAAGC,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACC,MAAP,CAAcC,uBAAd,CAAX,CAAzB;AAEA,SAAO,CAAC,GAAGL,gBAAJ,EAAsBM,MAAtB,CACL,CAACC,aAAD,EAAgBC,SAAhB,KAA8B;AAC5BD,IAAAA,aAAa,CAACC,SAAD,CAAb,GAA2B,EAA3B;AACA,WAAOD,aAAP;AACD,GAJI,EAKL,EALK,CAAP;AAOD;;AAEM,SAASE,kBAAT,GAAsC;AAC3C,SAAOC,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,CAAD,CAAb;AACD","sourcesContent":["import { TEventListenerDict, WidgetEventTypes } from './types';\n\nexport function initEventListenersDict(): TEventListenerDict {\n  const widgetEventTypes = Array.from(Object.values(WidgetEventTypes));\n\n  return [...widgetEventTypes].reduce<TEventListenerDict>(\n    (listenersDict, eventType) => {\n      listenersDict[eventType] = [];\n      return listenersDict;\n    },\n    {} as TEventListenerDict\n  );\n}\n\nexport function getRandomIntString(): string {\n  return String(Math.floor(Math.random() * 10000000));\n}\n"]}